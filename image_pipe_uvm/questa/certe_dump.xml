<certe_dump>
  <instance type=" image_pipe_primary_test "> 
     uvm_test_top 
  
     <instance type=" dut_env "> 
        env 
  
        <instance type=" image_pipe_env "> 
           penv_in 
  
           <instance type=" uvm_agent "> 
              agent 
  
              <instance type=" uvm_driver #(REQ,RSP) "> 
                 driver 
  
                 <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                    rsp_port 
                 </port> 
  
                 <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                    seq_item_port 
                    <connection>  uvm_test_top.env.penv_in.agent.sequencer.seq_item_export  </connection> 
                 </port> 
              </instance> 
  
  
              <instance type=" uvm_monitor "> 
                 monitor 
  
                 <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                    item_collected_port 
                    <connection>  uvm_test_top.env.sb.input_data_collected.analysis_export  </connection> 
                 </port> 
              </instance> 
  
  
              <instance type=" uvm_sequencer "> 
                 sequencer 
  
                 <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                    rsp_export 
                    <connection>  uvm_test_top.env.penv_in.agent.sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
                 </export> 
  
                 <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                    seq_item_export 
                 </imp> 
              </instance> 
  
           </instance> 
  
        </instance> 
  
  
        <instance type=" image_pipe_env "> 
           penv_out 
  
           <instance type=" uvm_agent "> 
              agent 
  
              <instance type=" uvm_driver #(REQ,RSP) "> 
                 busy_driver 
  
                 <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                    rsp_port 
                 </port> 
  
                 <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                    seq_item_port 
                    <connection>  uvm_test_top.env.penv_out.agent.busy_sequencer.seq_item_export  </connection> 
                 </port> 
              </instance> 
  
  
              <instance type=" uvm_sequencer "> 
                 busy_sequencer 
  
                 <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                    rsp_export 
                    <connection>  uvm_test_top.env.penv_out.agent.busy_sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
                 </export> 
  
                 <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                    seq_item_export 
                 </imp> 
              </instance> 
  
  
              <instance type=" uvm_monitor "> 
                 monitor 
  
                 <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                    item_collected_port 
                    <connection>  uvm_test_top.env.sb.output_data_collected.analysis_export  </connection> 
                 </port> 
              </instance> 
  
           </instance> 
  
        </instance> 
  
  
        <instance type=" reg_cpu_env "> 
           reg_env 
  
           <instance type=" reg_cpu_agent "> 
              agent 
  
              <instance type=" uvm_driver #(REQ,RSP) "> 
                 driver 
  
                 <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                    rsp_port 
                 </port> 
  
                 <port if_type = "uvm_seq_item_pull_port" txn_type = "anonymous"> 
                    seq_item_port 
                    <connection>  uvm_test_top.env.reg_env.agent.sequencer.seq_item_export  </connection> 
                 </port> 
              </instance> 
  
  
              <instance type=" uvm_sequencer "> 
                 sequencer 
  
                 <export if_type = "uvm_analysis_export" txn_type = "anonymous"> 
                    rsp_export 
                    <connection>  uvm_test_top.env.reg_env.agent.sequencer.sqr_rsp_analysis_fifo.analysis_export  </connection> 
                 </export> 
  
                 <imp if_type = "uvm_seq_item_pull_imp" txn_type = "anonymous"> 
                    seq_item_export 
                 </imp> 
              </instance> 
  
           </instance> 
  
  
           <instance type=" uvm_reg_predictor #(reg_cpu_data#(AW, DW)) "> 
              reg_predictor 
  
              <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
                 bus_in 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 reg_ap 
              </port> 
           </instance> 
  
        </instance> 
  
  
        <instance type=" image_pipe_scoreboard "> 
           sb 
  
           <instance type=" uvm_tlm_analysis_fifo #(T) "> 
              input_data_collected 
  
              <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
                 analysis_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 get_ap 
              </port> 
  
              <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
                 get_peek_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 put_ap 
              </port> 
  
              <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
                 put_export 
              </imp> 
           </instance> 
  
  
           <instance type=" uvm_tlm_analysis_fifo #(T) "> 
              output_data_collected 
  
              <imp if_type = "uvm_analysis_imp" txn_type = "anonymous"> 
                 analysis_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 get_ap 
              </port> 
  
              <imp if_type = "uvm_get_peek_imp" txn_type = "anonymous"> 
                 get_peek_export 
              </imp> 
  
              <port if_type = "uvm_analysis_port" txn_type = "anonymous"> 
                 put_ap 
              </port> 
  
              <imp if_type = "uvm_put_imp" txn_type = "anonymous"> 
                 put_export 
              </imp> 
           </instance> 
  
        </instance> 
  
     </instance> 
  
  </instance> 
  
  </certe_dump>